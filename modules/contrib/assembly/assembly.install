<?php

use Drupal\Core\Utility\UpdateException;
use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\Core\Database\Database;
use Drupal\Core\Config\FileStorage;
use Drupal\Core\Queue\QueueFactory;
use Drupal\Core\Queue\QueueInterface;

/**
 * Increase size of name column
 */
function assembly_update_8001() {
  $mgr =  \Drupal::entityDefinitionUpdateManager();
  $field =  $mgr->getFieldStorageDefinition('name', 'assembly');
  $schema = $field->getSchema();
  $field_schema = $schema['columns']['value'];
  $field_schema['length'] = 250;

  $schema = \Drupal::keyValue('entity.storage_schema.sql');
  $installed = $schema->get('assembly.field_schema_data.name');

  // updates the actual database, and the entity schema info.
  // Everything else here is the madness required to make drupal's entity
  // schema metadata match reality after making this out of band update.
  foreach (['assembly_field_data', 'assembly_field_revision'] as $table) {
    Database::getConnection()->schema()
      ->changeField($table, 'name', 'name', $field_schema);
    $installed[$table]['fields']['name']['length'] = 250;
  }
  $schema->set('assembly.field_schema_data.name', $installed);

  \Drupal::entityManager()->clearCachedFieldDefinitions();
  $installed_repo = \Drupal::service('entity.last_installed_schema.repository');
  $installed_repo->setLastInstalledFieldStorageDefinitions(
    'assembly',
    \Drupal::entityManager()->getFieldStorageDefinitions('assembly')
  );

}

/**
 * Add the assembly admin view list
 */
function assembly_update_8002() {
  $name = 'views.view.assembly';
  $source = new FileStorage(drupal_get_path('module', 'assembly') . '/config/install');
  /** @var \Drupal\Core\Config\StorageInterface $active_storage */
  $active_storage = \Drupal::service('config.storage');
  $active_storage->write($name, $source->read($name));

}

/**
 * Add visual styles field
 */
function assembly_update_8003() {
  $entity_type = \Drupal::service('entity_type.manager')->getDefinition('assembly');
  \Drupal::service('entity.definition_update_manager')->updateEntityType($entity_type);
}

/**
 * Update all reused assemblies to most recent revision (had to redo this in 8005)
 */
function assembly_update_8004() { }

/**
 * Update all reused assemblies to most recent revision (had to redo this in 8006)
 */
function assembly_update_8005() { }

/**
 * Update all reused assemblies to most recent revision
 */
function assembly_update_8006() {
  // Get all assemblies
  $query = \Drupal::database()->select('assembly', 'a');
  $query->fields('a', ['id', 'vid']);
  $results = $query->execute();
  $results = $results->fetchAll();

  // Run update existing process
  if (!empty($results)) {
    $queue_factory = $queue = FALSE;
    $use_queue = count($results) > 100;

    if ($use_queue)  {
      $queue_factory = \Drupal::service('queue');
      $queue = $queue_factory->get('assembly_update_revision_references');
    }
    foreach ($results as $result) {

      if ($use_queue) {
        $queue->createItem($result->id);
      }
      else {
        _assembly_update_existing($result->id);
      }
    }
  }
}
